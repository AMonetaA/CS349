CS 349 F23
User Interfaces
Search...
About
Schedule
Assignments
Support
Policies
Updated Sep 06, 2023
A0 Setup
(Web Apps)

Due Fri Sep 15 at 6 PM [1 Mark]
NOTE: You must complete A0 before submitting any other assignment.

Synopsis
You’ll setup your development environment, test that it works, and submit proof that you have everything working. This includes: VS Code, Git with UWaterloo Gitlab, Node, npm, and Vite with a Vanilla Typescript project.

Requirements and Grading
Make sure you have read and understand the general course policies and general assignment policies.

Required Steps and Files (1 mark)
You must complete all items to receive 1 mark. When committing, provide a 1 - 3 word informative message.

Git and Gitlab
Install the latest version of git (version 2.42.0). Verify your installation with git --version.

Clone your CS 349 assignment repo from UWaterloo GitLab into a local folder where you’ll work on all your assignments. Change directories to you A0 folder.

Run git --version > git.txt to create a file with your Git version.

Run git remote -v > gitlab.txt to create a file with your remote GitLab urls.

Add and commit git.txt and gitlab.txt to your local and remote repos: add, check status, commit, then push.

VS Code
Install the latest version of VS Code.

Install the “Prettier” plug-in.

Open your A0 folder in VS code (or just drag it onto VS Code), then save it as a workspace called “a0” in your A0 folder.

Add the a0.code-workspace file to your local and remote repos: add, check status, commit, then push.

.gitignore
Create a .gitignore in the root of your assignments folder to ignore Node, React, MacOS, Windows, and Linux.

Add the .gitignore file to your local and remote repos: add, check status, commit, then push.

Node.js
Install the latest LTS version of Node (version 18.17.1). Verify your installation with node -v.

Run node -v > node.txt to create a file with your Node version.

Add the node.txt file to your local and remote repos: add, check status, commit, then push.

npm
Version 9.6.7 of npm should have been installed with Node.js, verify that with npm -v.

Run npm -v > npm.txt to create a file with your Node version.

We’d like to know more about your system to help debug problems later. Run this command npx --yes systeminformation@latest info > system.txt from your A0 folder.

NOTE: If you’re not comfortable sending your system information, you can meet with a TA and answer a few questions about your system. In that case, just create a system.txt file with will show in office hours as the contents.

Add the npm.txt and system.txt to your local and remote repos: add, check status, commit, then push.

Chrome (or Chromium)
Install or upgrade to the latest version of Chrome (or Chromium browser).

Open this local Chrome URL chrome://version, select everything on that page and copy it to a file called chrome.txt, save that file to your a0 folder. If you’re using another Chromium browser, find the version information and copy that.

Add the chrome.txt file to your local and remote repos: add, check status, commit, then push.

Vite
From your A0 directory, create a Vite project called hello-vite using the Vanilla TypeScript template.

Follow the Vite instructions, change to the newly created hello-vite folder and run npm install.

Start the Vite dev server with npm run dev. Open the local server URL in your Chrome browser and verify you see the “Vite + TypeScript” demo page with the button counter.

Save the page as “HTML Only” to vite.html to your A0 folder.

Add the vite.html file to your local and remote repos: add, check status, commit, then push.

Check
Your assignment folder and the a0 folder should look like this:

├── a0
│   ├── a0.code-workspace
│   ├── chrome.txt
│   ├── git.txt
│   ├── gitlab.txt
│   ├── hello-vite/ ← many files and folders in here
│   ├── node.txt
│   ├── npm.txt
│   ├── system.txt
│   └── vite.html
├── a1
├── a2
├── a3
├── a4
└── .gitignore
Open the UWaterloo GitLab page for your remote assignment repo and verify all files are there.

Create a “test” folder outside of your local assignments repo and clone your remote repo to that directory. Examine the directory to verify all the files are there.

From a terminal open the hello-vite sub folder of your “test” folder. Run npm install then npm run dev and verify the Vite dev server runs and you can see that same “Vite + TypeScript” test page in your browser.

You’re Done!

Submission
Submit your assignment to your personal CS 349 repository (if you followed the steps above correctly, then you’ve already done this).

Ensure all required files are checked in (you already should have done this in the last few steps). It’s your responsibility to check your submission (e.g. by cloning it to a fresh directory and testing it like a marker will do).

Made with ❤ using spacebook with Eleventy, Tailwind, and Alpine.js